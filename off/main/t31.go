package main

import "fmt"

/*
求出1~13的整数中1出现的次数,并算出100~1300的整数中1出现的次数？
为此他特别数了一下1~13中包含1的数字有1、10、11、12、13因此共出现6次,但是对于后面问题他就没辙了。
ACMer希望你们帮帮他,并把问题更加普遍化,可以很快的求出任意非负整数区间中1出现的次数（从1 到 n 中1出现的次数）
*/

//分别计算个位 十位  百位 .... 上出现1的次数
func numOf1(n int) int {
	rs := 0
	for i := 1; i < n; i *= 10 {
		a := n / i
		b := n % i

		rs += (a + 8) / 10 * i
		if a%10 == 1 {
			rs += b + 1
		}
	}
	return rs
}

func main() {
	fmt.Println(numOf1(11))
}
